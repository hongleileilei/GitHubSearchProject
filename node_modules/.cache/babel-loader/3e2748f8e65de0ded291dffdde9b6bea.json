{"ast":null,"code":"var _jsxFileName = \"/Users/liuhonglei/Desktop/Projects/blabla0510/GitHubSearchProject/src/components/Repos.jsx\";\nimport React from 'react';\nimport GithubRepo from './GithubRepo';\nimport Infinite from 'react-infinite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Repos extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchData = () => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://api.github.com/users/${this.props.params.username}/repos?&page=${this.state.page}&per_page=50`).then(response => response.json()).then(reposResponse => {\n        let mergedArray = this.state.repos.concat(reposResponse);\n        this.setState({\n          repos: mergedArray,\n          page: this.state.page + 1,\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      page: 1,\n      loading: false,\n      repos: []\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.params.username !== this.props.params.username) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repos-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Public Repositories by \", this.props.params.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Infinite-scroll-repos\",\n        children: /*#__PURE__*/_jsxDEV(Infinite, {\n          className: \"repos-page-infinite\",\n          isInfiniteLoading: this.state.loading,\n          onInfiniteLoad: this.fetchData.bind(this),\n          useWindowAsScrollContainer: true,\n          elementHeight: 50,\n          infiniteLoadBeginEdgeOffset: 100,\n          children: this.state.repos.map(repo => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"RepoStyle\",\n              children: /*#__PURE__*/_jsxDEV(GithubRepo, {\n                name: repo.full_name,\n                stargazers: repo.stargazers_count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)\n            }, repo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Repos;","map":{"version":3,"sources":["/Users/liuhonglei/Desktop/Projects/blabla0510/GitHubSearchProject/src/components/Repos.jsx"],"names":["React","GithubRepo","Infinite","Repos","Component","constructor","fetchData","setState","loading","fetch","props","params","username","state","page","then","response","json","reposResponse","mergedArray","repos","concat","componentDidUpdate","prevProps","prevState","render","bind","map","repo","full_name","stargazers_count","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAEnCC,EAAAA,WAAW,GAAG;AACX;;AADW,SASdC,SATc,GASF,MAAM;AAEhB,WAAKC,QAAL,CAAc;AACXC,QAAAA,OAAO,EAAE;AADE,OAAd;AAGCC,MAAAA,KAAK,CAAE,gCAA+B,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,QAAS,gBAAe,KAAKC,KAAL,CAAWC,IAAK,cAA3F,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAGIG,aAAa,IAAI;AAChB,YAAIC,WAAW,GAAG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBH,aAAxB,CAAlB;AACC,aAAKX,QAAL,CAAc;AACZa,UAAAA,KAAK,EAAED,WADK;AAEZL,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkB,CAFZ;AAGZN,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD,OAVL;AAaD,KA3BY;;AAEX,SAAKK,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXN,MAAAA,OAAO,EAAE,KAFE;AAGXY,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKH;;AAsBAE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACtC,QAAID,SAAS,CAACZ,MAAV,CAAiBC,QAAjB,KAA8B,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,QAApD,EAA8D;AAC5D,WAAKN,SAAL;AACD;AACF;;AAEFmB,EAAAA,MAAM,GAAG;AAEN,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,8CAA4B,KAAKf,KAAL,CAAWC,MAAX,CAAkBC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,qBAApB;AACU,UAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWL,OADxC;AAEU,UAAA,cAAc,EAAE,KAAKF,SAAL,CAAeoB,IAAf,CAAoB,IAApB,CAF1B;AAGU,UAAA,0BAA0B,MAHpC;AAIU,UAAA,aAAa,EAAE,EAJzB;AAKU,UAAA,2BAA2B,EAAE,GALvC;AAAA,oBAMK,KAAKb,KAAL,CAAWO,KAAX,CAAiBO,GAAjB,CAAqBC,IAAI,IAAI;AAC1B,gCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACM,QAAC,UAAD;AAAY,gBAAA,IAAI,EAAEA,IAAI,CAACC,SAAvB;AAAkC,gBAAA,UAAU,EAAED,IAAI,CAACE;AAAnD;AAAA;AAAA;AAAA;AAAA;AADN,eAAgCF,IAAI,CAACG,EAArC;AAAA;AAAA;AAAA;AAAA,oBADF;AAKF,WAND;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA7DiC;;AA+DpC,eAAe5B,KAAf","sourcesContent":["import React from 'react';\nimport GithubRepo from './GithubRepo';\nimport Infinite from 'react-infinite';\n\nclass Repos extends React.Component {\n\n constructor() {\n    super();\n    this.state = {\n      page: 1,\n      loading: false,\n      repos: []\n    };\n}\n\n fetchData = () => {\n\n   this.setState({\n      loading: true\n    });\n    fetch(`https://api.github.com/users/${this.props.params.username}/repos?&page=${this.state.page}&per_page=50`)\n      .then(response => response.json())\n      .then(\n        reposResponse => {\n         let mergedArray = this.state.repos.concat(reposResponse);\n          this.setState({\n            repos: mergedArray,\n            page: this.state.page + 1,\n            loading: false\n          });\n        }\n      );\n\n  }\n\n componentDidUpdate(prevProps, prevState) {\n    if (prevProps.params.username !== this.props.params.username) {\n      this.fetchData();\n    }\n  }\n\n render() {\n\n    return (\n      <div className=\"repos-page\">\n        <h3>Public Repositories by {this.props.params.username}</h3>\n        <div className=\"Infinite-scroll-repos\">\n            <Infinite className=\"repos-page-infinite\"\n                      isInfiniteLoading={this.state.loading}\n                      onInfiniteLoad={this.fetchData.bind(this)}\n                      useWindowAsScrollContainer\n                      elementHeight={50}\n                      infiniteLoadBeginEdgeOffset={100} >\n                {this.state.repos.map(repo => {\n                    return (\n                      <div className=\"RepoStyle\" key={repo.id}>\n                            <GithubRepo name={repo.full_name} stargazers={repo.stargazers_count}/>  \n                      </div>\n                    \n                )}\n                )} \n            </Infinite>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Repos;"]},"metadata":{},"sourceType":"module"}