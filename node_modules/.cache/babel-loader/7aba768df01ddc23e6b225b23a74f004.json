{"ast":null,"code":"'use strict';\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar React = global.React || require('react');\n\nvar PropTypes = global.PropTypes || require('prop-types');\n\nvar createReactClass = global.createReactClass || require('create-react-class');\n\nvar window = require('./utils/window');\n\nrequire('./utils/establish-polyfills');\n\nvar scaleEnum = require('./utils/scaleEnum');\n\nvar infiniteHelpers = require('./utils/infiniteHelpers');\n\nvar _isFinite = require('lodash.isfinite');\n\nvar preloadType = require('./utils/types').preloadType;\n\nvar checkProps = checkProps = require('./utils/checkProps');\n\nvar Infinite = createReactClass({\n  propTypes: {\n    children: PropTypes.any,\n    handleScroll: PropTypes.func,\n    // preloadBatchSize causes updates only to\n    // happen each preloadBatchSize pixels of scrolling.\n    // Set a larger number to cause fewer updates to the\n    // element list.\n    preloadBatchSize: preloadType,\n    // preloadAdditionalHeight determines how much of the\n    // list above and below the container is preloaded even\n    // when it is not currently visible to the user. In the\n    // regular scroll implementation, preloadAdditionalHeight\n    // is equal to the entire height of the list.\n    preloadAdditionalHeight: preloadType,\n    // page to screen ratio\n    // The provided elementHeight can be either\n    //  1. a constant: all elements are the same height\n    //  2. an array containing the height of each element\n    elementHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n    // This is the total height of the visible window. One\n    // of\n    containerHeight: PropTypes.number,\n    useWindowAsScrollContainer: PropTypes.bool,\n    displayBottomUpwards: PropTypes.bool.isRequired,\n    infiniteLoadBeginEdgeOffset: PropTypes.number,\n    onInfiniteLoad: PropTypes.func,\n    loadingSpinnerDelegate: PropTypes.node,\n    isInfiniteLoading: PropTypes.bool,\n    timeScrollStateLastsForAfterUserScrolls: PropTypes.number,\n    className: PropTypes.string,\n    styles: PropTypes.shape({\n      scrollableStyle: PropTypes.object\n    }).isRequired\n  },\n  statics: {\n    containerHeightScaleFactor: function containerHeightScaleFactor(factor) {\n      if (!_isFinite(factor)) {\n        throw new Error('The scale factor must be a number.');\n      }\n\n      return {\n        type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n        amount: factor\n      };\n    }\n  },\n  // Properties currently used but which may be\n  // refactored away in the future.\n  computedProps: {},\n  utils: {},\n  shouldAttachToBottom: false,\n  preservedScrollState: 0,\n  loadingSpinnerHeight: 0,\n  deprecationWarned: false,\n  scrollable: null,\n  topSpacer: null,\n  bottomSpacer: null,\n  smoothScrollingWrapper: null,\n  loadingSpinner: null,\n  getDefaultProps: function getDefaultProps() {\n    return {\n      handleScroll: function handleScroll() {},\n      useWindowAsScrollContainer: false,\n      onInfiniteLoad: function onInfiniteLoad() {},\n      loadingSpinnerDelegate: React.createElement('div', null),\n      displayBottomUpwards: false,\n      isInfiniteLoading: false,\n      timeScrollStateLastsForAfterUserScrolls: 150,\n      className: '',\n      styles: {}\n    };\n  },\n  // automatic adjust to scroll direction\n  // give spinner a ReactCSSTransitionGroup\n  getInitialState: function getInitialState() {\n    var nextInternalState = this.recomputeInternalStateFromProps(this.props);\n    this.computedProps = nextInternalState.computedProps;\n    this.utils = nextInternalState.utils;\n    this.shouldAttachToBottom = this.props.displayBottomUpwards;\n    var state = nextInternalState.newState;\n    state.scrollTimeout = undefined;\n    state.isScrolling = false;\n    return state;\n  },\n  generateComputedProps: function generateComputedProps(props) {\n    // These are extracted so their type definitions do not conflict.\n    var containerHeight = props.containerHeight;\n    var preloadBatchSize = props.preloadBatchSize;\n    var preloadAdditionalHeight = props.preloadAdditionalHeight;\n\n    var oldProps = _objectWithoutProperties(props, ['containerHeight', 'preloadBatchSize', 'preloadAdditionalHeight']);\n\n    var newProps = {};\n    containerHeight = typeof containerHeight === 'number' ? containerHeight : 0;\n    newProps.containerHeight = props.useWindowAsScrollContainer ? window.innerHeight : containerHeight;\n\n    if (oldProps.infiniteLoadBeginBottomOffset !== undefined) {\n      newProps.infiniteLoadBeginEdgeOffset = oldProps.infiniteLoadBeginBottomOffset;\n\n      if (!this.deprecationWarned) {\n        console.error('Warning: React Infinite\\'s infiniteLoadBeginBottomOffset prop\\n        has been deprecated as of 0.6.0. Please use infiniteLoadBeginEdgeOffset.\\n        Because this is a rather descriptive name, a simple find and replace\\n        should suffice.');\n        this.deprecationWarned = true;\n      }\n    }\n\n    var defaultPreloadBatchSizeScaling = {\n      type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n      amount: 0.5\n    };\n    var batchSize = preloadBatchSize && preloadBatchSize.type ? preloadBatchSize : defaultPreloadBatchSizeScaling;\n\n    if (typeof preloadBatchSize === 'number') {\n      newProps.preloadBatchSize = preloadBatchSize;\n    } else if (typeof batchSize === 'object' && batchSize.type === scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR) {\n      newProps.preloadBatchSize = newProps.containerHeight * batchSize.amount;\n    } else {\n      newProps.preloadBatchSize = 0;\n    }\n\n    var defaultPreloadAdditionalHeightScaling = {\n      type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n      amount: 1\n    };\n    var additionalHeight = preloadAdditionalHeight && preloadAdditionalHeight.type ? preloadAdditionalHeight : defaultPreloadAdditionalHeightScaling;\n\n    if (typeof preloadAdditionalHeight === 'number') {\n      newProps.preloadAdditionalHeight = preloadAdditionalHeight;\n    } else if (typeof additionalHeight === 'object' && additionalHeight.type === scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR) {\n      newProps.preloadAdditionalHeight = newProps.containerHeight * additionalHeight.amount;\n    } else {\n      newProps.preloadAdditionalHeight = 0;\n    }\n\n    return Object.assign(oldProps, newProps);\n  },\n  generateComputedUtilityFunctions: function generateComputedUtilityFunctions(props) {\n    var _this = this;\n\n    var utilities = {};\n\n    utilities.getLoadingSpinnerHeight = function () {\n      var loadingSpinnerHeight = 0;\n\n      if (_this.loadingSpinner) {\n        loadingSpinnerHeight = _this.loadingSpinner.offsetHeight || 0;\n      }\n\n      return loadingSpinnerHeight;\n    };\n\n    if (props.useWindowAsScrollContainer) {\n      utilities.subscribeToScrollListener = function () {\n        window.addEventListener('scroll', _this.infiniteHandleScroll);\n      };\n\n      utilities.unsubscribeFromScrollListener = function () {\n        window.removeEventListener('scroll', _this.infiniteHandleScroll);\n      };\n\n      utilities.nodeScrollListener = function () {};\n\n      utilities.getScrollTop = function () {\n        return window.pageYOffset;\n      };\n\n      utilities.setScrollTop = function (top) {\n        window.scroll(window.pageXOffset, top);\n      };\n\n      utilities.scrollShouldBeIgnored = function () {\n        return false;\n      };\n\n      utilities.buildScrollableStyle = function () {\n        return {};\n      };\n    } else {\n      utilities.subscribeToScrollListener = function () {};\n\n      utilities.unsubscribeFromScrollListener = function () {};\n\n      utilities.nodeScrollListener = this.infiniteHandleScroll;\n\n      utilities.getScrollTop = function () {\n        return _this.scrollable ? _this.scrollable.scrollTop : 0;\n      };\n\n      utilities.setScrollTop = function (top) {\n        if (_this.scrollable) {\n          _this.scrollable.scrollTop = top;\n        }\n      };\n\n      utilities.scrollShouldBeIgnored = function (event) {\n        return event.target !== _this.scrollable;\n      };\n\n      utilities.buildScrollableStyle = function () {\n        return Object.assign({}, {\n          height: _this.computedProps.containerHeight,\n          overflowX: 'hidden',\n          overflowY: 'scroll',\n          WebkitOverflowScrolling: 'touch'\n        }, _this.computedProps.styles.scrollableStyle || {});\n      };\n    }\n\n    return utilities;\n  },\n  recomputeInternalStateFromProps: function recomputeInternalStateFromProps(props) {\n    checkProps(props);\n    var computedProps = this.generateComputedProps(props);\n    var utils = this.generateComputedUtilityFunctions(props);\n    var newState = {};\n    newState.numberOfChildren = React.Children.count(computedProps.children);\n    newState.infiniteComputer = infiniteHelpers.createInfiniteComputer(computedProps.elementHeight, computedProps.children);\n\n    if (computedProps.isInfiniteLoading !== undefined) {\n      newState.isInfiniteLoading = computedProps.isInfiniteLoading;\n    }\n\n    newState.preloadBatchSize = computedProps.preloadBatchSize;\n    newState.preloadAdditionalHeight = computedProps.preloadAdditionalHeight;\n    newState = Object.assign(newState, infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(newState, utils.getScrollTop()));\n    return {\n      computedProps: computedProps,\n      utils: utils,\n      newState: newState\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    var nextInternalState = this.recomputeInternalStateFromProps(nextProps);\n    this.computedProps = nextInternalState.computedProps;\n    this.utils = nextInternalState.utils;\n    this.setState(nextInternalState.newState);\n  },\n  componentWillUpdate: function componentWillUpdate() {\n    if (this.props.displayBottomUpwards) {\n      this.preservedScrollState = this.utils.getScrollTop() - this.loadingSpinnerHeight;\n    }\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    this.loadingSpinnerHeight = this.utils.getLoadingSpinnerHeight();\n\n    if (this.props.displayBottomUpwards) {\n      var lowestScrollTop = this.getLowestPossibleScrollTop();\n\n      if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n        this.utils.setScrollTop(lowestScrollTop);\n      } else if (prevProps.isInfiniteLoading && !this.props.isInfiniteLoading) {\n        this.utils.setScrollTop(this.state.infiniteComputer.getTotalScrollableHeight() - prevState.infiniteComputer.getTotalScrollableHeight() + this.preservedScrollState);\n      }\n    }\n\n    var hasLoadedMoreChildren = this.state.numberOfChildren !== prevState.numberOfChildren;\n\n    if (hasLoadedMoreChildren) {\n      var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(this.state, this.utils.getScrollTop());\n      this.setState(newApertureState);\n    }\n\n    var isMissingVisibleRows = hasLoadedMoreChildren && !this.hasAllVisibleItems() && !this.state.isInfiniteLoading;\n\n    if (isMissingVisibleRows) {\n      this.onInfiniteLoad();\n    }\n  },\n  componentDidMount: function componentDidMount() {\n    this.utils.subscribeToScrollListener();\n\n    if (!this.hasAllVisibleItems()) {\n      this.onInfiniteLoad();\n    }\n\n    if (this.props.displayBottomUpwards) {\n      var lowestScrollTop = this.getLowestPossibleScrollTop();\n\n      if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n        this.utils.setScrollTop(lowestScrollTop);\n      }\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this.utils.unsubscribeFromScrollListener();\n  },\n  infiniteHandleScroll: function infiniteHandleScroll(e) {\n    if (this.utils.scrollShouldBeIgnored(e)) {\n      return;\n    }\n\n    this.computedProps.handleScroll(this.scrollable);\n    this.handleScroll(this.utils.getScrollTop());\n  },\n  manageScrollTimeouts: function manageScrollTimeouts() {\n    // Maintains a series of timeouts to set this.state.isScrolling\n    // to be true when the element is scrolling.\n    if (this.state.scrollTimeout) {\n      clearTimeout(this.state.scrollTimeout);\n    }\n\n    var that = this,\n        scrollTimeout = setTimeout(function () {\n      that.setState({\n        isScrolling: false,\n        scrollTimeout: undefined\n      });\n    }, this.computedProps.timeScrollStateLastsForAfterUserScrolls);\n    this.setState({\n      isScrolling: true,\n      scrollTimeout: scrollTimeout\n    });\n  },\n  getLowestPossibleScrollTop: function getLowestPossibleScrollTop() {\n    return this.state.infiniteComputer.getTotalScrollableHeight() - this.computedProps.containerHeight;\n  },\n  hasAllVisibleItems: function hasAllVisibleItems() {\n    return !(_isFinite(this.computedProps.infiniteLoadBeginEdgeOffset) && this.state.infiniteComputer.getTotalScrollableHeight() < this.computedProps.containerHeight);\n  },\n  passedEdgeForInfiniteScroll: function passedEdgeForInfiniteScroll(scrollTop) {\n    if (this.computedProps.displayBottomUpwards) {\n      return !this.shouldAttachToBottom && scrollTop < this.computedProps.infiniteLoadBeginEdgeOffset;\n    } else {\n      return scrollTop > this.state.infiniteComputer.getTotalScrollableHeight() - this.computedProps.containerHeight - this.computedProps.infiniteLoadBeginEdgeOffset;\n    }\n  },\n  onInfiniteLoad: function onInfiniteLoad() {\n    this.setState({\n      isInfiniteLoading: true\n    });\n    this.computedProps.onInfiniteLoad();\n  },\n  handleScroll: function handleScroll(scrollTop) {\n    this.shouldAttachToBottom = this.computedProps.displayBottomUpwards && scrollTop >= this.getLowestPossibleScrollTop();\n    this.manageScrollTimeouts();\n    var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(this.state, scrollTop);\n\n    if (this.passedEdgeForInfiniteScroll(scrollTop) && !this.state.isInfiniteLoading) {\n      this.setState(Object.assign({}, newApertureState));\n      this.onInfiniteLoad();\n    } else {\n      this.setState(newApertureState);\n    }\n  },\n  buildHeightStyle: function buildHeightStyle(height) {\n    return {\n      width: '100%',\n      height: Math.ceil(height)\n    };\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var displayables;\n\n    if (this.state.numberOfChildren > 1) {\n      displayables = this.computedProps.children.slice(this.state.displayIndexStart, this.state.displayIndexEnd + 1);\n    } else {\n      displayables = this.computedProps.children;\n    }\n\n    var infiniteScrollStyles = {};\n\n    if (this.state.isScrolling) {\n      infiniteScrollStyles.pointerEvents = 'none';\n    }\n\n    var topSpacerHeight = this.state.infiniteComputer.getTopSpacerHeight(this.state.displayIndexStart),\n        bottomSpacerHeight = this.state.infiniteComputer.getBottomSpacerHeight(this.state.displayIndexEnd); // This asymmetry is due to a reluctance to use CSS to control\n    // the bottom alignment\n\n    if (this.computedProps.displayBottomUpwards) {\n      var heightDifference = this.computedProps.containerHeight - this.state.infiniteComputer.getTotalScrollableHeight();\n\n      if (heightDifference > 0) {\n        topSpacerHeight = heightDifference - this.loadingSpinnerHeight;\n      }\n    }\n\n    var loadingSpinner = this.computedProps.infiniteLoadBeginEdgeOffset === undefined ? null : React.createElement('div', {\n      ref: function (c) {\n        _this2.loadingSpinner = c;\n      }\n    }, this.state.isInfiniteLoading ? this.computedProps.loadingSpinnerDelegate : null); // topSpacer and bottomSpacer take up the amount of space that the\n    // rendered elements would have taken up otherwise\n\n    return React.createElement('div', {\n      className: this.computedProps.className,\n      ref: function (c) {\n        _this2.scrollable = c;\n      },\n      style: this.utils.buildScrollableStyle(),\n      onScroll: this.utils.nodeScrollListener\n    }, React.createElement('div', {\n      ref: function (c) {\n        _this2.smoothScrollingWrapper = c;\n      },\n      style: infiniteScrollStyles\n    }, React.createElement('div', {\n      ref: function (c) {\n        _this2.topSpacer = c;\n      },\n      style: this.buildHeightStyle(topSpacerHeight)\n    }), this.computedProps.displayBottomUpwards && loadingSpinner, displayables, !this.computedProps.displayBottomUpwards && loadingSpinner, React.createElement('div', {\n      ref: function (c) {\n        _this2.bottomSpacer = c;\n      },\n      style: this.buildHeightStyle(bottomSpacerHeight)\n    })));\n  }\n});\nmodule.exports = Infinite;\nglobal.Infinite = Infinite;","map":{"version":3,"sources":["/Users/liuhonglei/Desktop/Projects/blabla0510/GitHubSearchProject/node_modules/react-infinite/build/react-infinite.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","React","global","require","PropTypes","createReactClass","window","scaleEnum","infiniteHelpers","_isFinite","preloadType","checkProps","Infinite","propTypes","children","any","handleScroll","func","preloadBatchSize","preloadAdditionalHeight","elementHeight","oneOfType","number","arrayOf","isRequired","containerHeight","useWindowAsScrollContainer","bool","displayBottomUpwards","infiniteLoadBeginEdgeOffset","onInfiniteLoad","loadingSpinnerDelegate","node","isInfiniteLoading","timeScrollStateLastsForAfterUserScrolls","className","string","styles","shape","scrollableStyle","object","statics","containerHeightScaleFactor","factor","Error","type","CONTAINER_HEIGHT_SCALE_FACTOR","amount","computedProps","utils","shouldAttachToBottom","preservedScrollState","loadingSpinnerHeight","deprecationWarned","scrollable","topSpacer","bottomSpacer","smoothScrollingWrapper","loadingSpinner","getDefaultProps","createElement","getInitialState","nextInternalState","recomputeInternalStateFromProps","props","state","newState","scrollTimeout","undefined","isScrolling","generateComputedProps","oldProps","newProps","innerHeight","infiniteLoadBeginBottomOffset","console","error","defaultPreloadBatchSizeScaling","batchSize","defaultPreloadAdditionalHeightScaling","additionalHeight","assign","generateComputedUtilityFunctions","_this","utilities","getLoadingSpinnerHeight","offsetHeight","subscribeToScrollListener","addEventListener","infiniteHandleScroll","unsubscribeFromScrollListener","removeEventListener","nodeScrollListener","getScrollTop","pageYOffset","setScrollTop","top","scroll","pageXOffset","scrollShouldBeIgnored","buildScrollableStyle","scrollTop","event","height","overflowX","overflowY","WebkitOverflowScrolling","numberOfChildren","Children","count","infiniteComputer","createInfiniteComputer","recomputeApertureStateFromOptionsAndScrollTop","componentWillReceiveProps","nextProps","setState","componentWillUpdate","componentDidUpdate","prevProps","prevState","lowestScrollTop","getLowestPossibleScrollTop","getTotalScrollableHeight","hasLoadedMoreChildren","newApertureState","isMissingVisibleRows","hasAllVisibleItems","componentDidMount","componentWillUnmount","e","manageScrollTimeouts","clearTimeout","that","setTimeout","passedEdgeForInfiniteScroll","buildHeightStyle","width","Math","ceil","render","_this2","displayables","slice","displayIndexStart","displayIndexEnd","infiniteScrollStyles","pointerEvents","topSpacerHeight","getTopSpacerHeight","bottomSpacerHeight","getBottomSpacerHeight","heightDifference","ref","c","style","onScroll","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar React = global.React || require('react');\nvar PropTypes = global.PropTypes || require('prop-types');\nvar createReactClass = global.createReactClass || require('create-react-class');\n\nvar window = require('./utils/window');\n\nrequire('./utils/establish-polyfills');\nvar scaleEnum = require('./utils/scaleEnum');\nvar infiniteHelpers = require('./utils/infiniteHelpers');\nvar _isFinite = require('lodash.isfinite');\n\nvar preloadType = require('./utils/types').preloadType;\nvar checkProps = checkProps = require('./utils/checkProps');\n\nvar Infinite = createReactClass({\n  propTypes: {\n    children: PropTypes.any,\n\n    handleScroll: PropTypes.func,\n\n    // preloadBatchSize causes updates only to\n    // happen each preloadBatchSize pixels of scrolling.\n    // Set a larger number to cause fewer updates to the\n    // element list.\n    preloadBatchSize: preloadType,\n    // preloadAdditionalHeight determines how much of the\n    // list above and below the container is preloaded even\n    // when it is not currently visible to the user. In the\n    // regular scroll implementation, preloadAdditionalHeight\n    // is equal to the entire height of the list.\n    preloadAdditionalHeight: preloadType, // page to screen ratio\n\n    // The provided elementHeight can be either\n    //  1. a constant: all elements are the same height\n    //  2. an array containing the height of each element\n    elementHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n    // This is the total height of the visible window. One\n    // of\n    containerHeight: PropTypes.number,\n    useWindowAsScrollContainer: PropTypes.bool,\n\n    displayBottomUpwards: PropTypes.bool.isRequired,\n\n    infiniteLoadBeginEdgeOffset: PropTypes.number,\n    onInfiniteLoad: PropTypes.func,\n    loadingSpinnerDelegate: PropTypes.node,\n\n    isInfiniteLoading: PropTypes.bool,\n    timeScrollStateLastsForAfterUserScrolls: PropTypes.number,\n\n    className: PropTypes.string,\n\n    styles: PropTypes.shape({\n      scrollableStyle: PropTypes.object\n    }).isRequired\n  },\n  statics: {\n    containerHeightScaleFactor: function containerHeightScaleFactor(factor) {\n      if (!_isFinite(factor)) {\n        throw new Error('The scale factor must be a number.');\n      }\n      return {\n        type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n        amount: factor\n      };\n    }\n  },\n\n  // Properties currently used but which may be\n  // refactored away in the future.\n  computedProps: {},\n  utils: {},\n  shouldAttachToBottom: false,\n  preservedScrollState: 0,\n  loadingSpinnerHeight: 0,\n  deprecationWarned: false,\n\n  scrollable: null,\n  topSpacer: null,\n  bottomSpacer: null,\n  smoothScrollingWrapper: null,\n  loadingSpinner: null,\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      handleScroll: function handleScroll() {},\n\n      useWindowAsScrollContainer: false,\n\n      onInfiniteLoad: function onInfiniteLoad() {},\n      loadingSpinnerDelegate: React.createElement('div', null),\n\n      displayBottomUpwards: false,\n\n      isInfiniteLoading: false,\n      timeScrollStateLastsForAfterUserScrolls: 150,\n\n      className: '',\n\n      styles: {}\n    };\n  },\n\n  // automatic adjust to scroll direction\n  // give spinner a ReactCSSTransitionGroup\n  getInitialState: function getInitialState() {\n    var nextInternalState = this.recomputeInternalStateFromProps(this.props);\n\n    this.computedProps = nextInternalState.computedProps;\n    this.utils = nextInternalState.utils;\n    this.shouldAttachToBottom = this.props.displayBottomUpwards;\n\n    var state = nextInternalState.newState;\n    state.scrollTimeout = undefined;\n    state.isScrolling = false;\n\n    return state;\n  },\n\n  generateComputedProps: function generateComputedProps(props) {\n    // These are extracted so their type definitions do not conflict.\n    var containerHeight = props.containerHeight;\n    var preloadBatchSize = props.preloadBatchSize;\n    var preloadAdditionalHeight = props.preloadAdditionalHeight;\n\n    var oldProps = _objectWithoutProperties(props, ['containerHeight', 'preloadBatchSize', 'preloadAdditionalHeight']);\n\n    var newProps = {};\n    containerHeight = typeof containerHeight === 'number' ? containerHeight : 0;\n    newProps.containerHeight = props.useWindowAsScrollContainer ? window.innerHeight : containerHeight;\n\n    if (oldProps.infiniteLoadBeginBottomOffset !== undefined) {\n      newProps.infiniteLoadBeginEdgeOffset = oldProps.infiniteLoadBeginBottomOffset;\n      if (!this.deprecationWarned) {\n        console.error('Warning: React Infinite\\'s infiniteLoadBeginBottomOffset prop\\n        has been deprecated as of 0.6.0. Please use infiniteLoadBeginEdgeOffset.\\n        Because this is a rather descriptive name, a simple find and replace\\n        should suffice.');\n        this.deprecationWarned = true;\n      }\n    }\n\n    var defaultPreloadBatchSizeScaling = {\n      type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n      amount: 0.5\n    };\n    var batchSize = preloadBatchSize && preloadBatchSize.type ? preloadBatchSize : defaultPreloadBatchSizeScaling;\n\n    if (typeof preloadBatchSize === 'number') {\n      newProps.preloadBatchSize = preloadBatchSize;\n    } else if (typeof batchSize === 'object' && batchSize.type === scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR) {\n      newProps.preloadBatchSize = newProps.containerHeight * batchSize.amount;\n    } else {\n      newProps.preloadBatchSize = 0;\n    }\n\n    var defaultPreloadAdditionalHeightScaling = {\n      type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n      amount: 1\n    };\n    var additionalHeight = preloadAdditionalHeight && preloadAdditionalHeight.type ? preloadAdditionalHeight : defaultPreloadAdditionalHeightScaling;\n    if (typeof preloadAdditionalHeight === 'number') {\n      newProps.preloadAdditionalHeight = preloadAdditionalHeight;\n    } else if (typeof additionalHeight === 'object' && additionalHeight.type === scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR) {\n      newProps.preloadAdditionalHeight = newProps.containerHeight * additionalHeight.amount;\n    } else {\n      newProps.preloadAdditionalHeight = 0;\n    }\n\n    return Object.assign(oldProps, newProps);\n  },\n\n  generateComputedUtilityFunctions: function generateComputedUtilityFunctions(props) {\n    var _this = this;\n\n    var utilities = {};\n    utilities.getLoadingSpinnerHeight = function () {\n      var loadingSpinnerHeight = 0;\n      if (_this.loadingSpinner) {\n        loadingSpinnerHeight = _this.loadingSpinner.offsetHeight || 0;\n      }\n      return loadingSpinnerHeight;\n    };\n    if (props.useWindowAsScrollContainer) {\n      utilities.subscribeToScrollListener = function () {\n        window.addEventListener('scroll', _this.infiniteHandleScroll);\n      };\n      utilities.unsubscribeFromScrollListener = function () {\n        window.removeEventListener('scroll', _this.infiniteHandleScroll);\n      };\n      utilities.nodeScrollListener = function () {};\n      utilities.getScrollTop = function () {\n        return window.pageYOffset;\n      };\n      utilities.setScrollTop = function (top) {\n        window.scroll(window.pageXOffset, top);\n      };\n      utilities.scrollShouldBeIgnored = function () {\n        return false;\n      };\n      utilities.buildScrollableStyle = function () {\n        return {};\n      };\n    } else {\n      utilities.subscribeToScrollListener = function () {};\n      utilities.unsubscribeFromScrollListener = function () {};\n      utilities.nodeScrollListener = this.infiniteHandleScroll;\n      utilities.getScrollTop = function () {\n        return _this.scrollable ? _this.scrollable.scrollTop : 0;\n      };\n\n      utilities.setScrollTop = function (top) {\n        if (_this.scrollable) {\n          _this.scrollable.scrollTop = top;\n        }\n      };\n      utilities.scrollShouldBeIgnored = function (event) {\n        return event.target !== _this.scrollable;\n      };\n\n      utilities.buildScrollableStyle = function () {\n        return Object.assign({}, {\n          height: _this.computedProps.containerHeight,\n          overflowX: 'hidden',\n          overflowY: 'scroll',\n          WebkitOverflowScrolling: 'touch'\n        }, _this.computedProps.styles.scrollableStyle || {});\n      };\n    }\n    return utilities;\n  },\n\n  recomputeInternalStateFromProps: function recomputeInternalStateFromProps(props) {\n    checkProps(props);\n    var computedProps = this.generateComputedProps(props);\n    var utils = this.generateComputedUtilityFunctions(props);\n\n    var newState = {};\n\n    newState.numberOfChildren = React.Children.count(computedProps.children);\n    newState.infiniteComputer = infiniteHelpers.createInfiniteComputer(computedProps.elementHeight, computedProps.children);\n\n    if (computedProps.isInfiniteLoading !== undefined) {\n      newState.isInfiniteLoading = computedProps.isInfiniteLoading;\n    }\n\n    newState.preloadBatchSize = computedProps.preloadBatchSize;\n    newState.preloadAdditionalHeight = computedProps.preloadAdditionalHeight;\n\n    newState = Object.assign(newState, infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(newState, utils.getScrollTop()));\n\n    return {\n      computedProps: computedProps,\n      utils: utils,\n      newState: newState\n    };\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    var nextInternalState = this.recomputeInternalStateFromProps(nextProps);\n\n    this.computedProps = nextInternalState.computedProps;\n    this.utils = nextInternalState.utils;\n\n    this.setState(nextInternalState.newState);\n  },\n\n  componentWillUpdate: function componentWillUpdate() {\n    if (this.props.displayBottomUpwards) {\n      this.preservedScrollState = this.utils.getScrollTop() - this.loadingSpinnerHeight;\n    }\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    this.loadingSpinnerHeight = this.utils.getLoadingSpinnerHeight();\n\n    if (this.props.displayBottomUpwards) {\n      var lowestScrollTop = this.getLowestPossibleScrollTop();\n      if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n        this.utils.setScrollTop(lowestScrollTop);\n      } else if (prevProps.isInfiniteLoading && !this.props.isInfiniteLoading) {\n        this.utils.setScrollTop(this.state.infiniteComputer.getTotalScrollableHeight() - prevState.infiniteComputer.getTotalScrollableHeight() + this.preservedScrollState);\n      }\n    }\n\n    var hasLoadedMoreChildren = this.state.numberOfChildren !== prevState.numberOfChildren;\n    if (hasLoadedMoreChildren) {\n      var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(this.state, this.utils.getScrollTop());\n      this.setState(newApertureState);\n    }\n\n    var isMissingVisibleRows = hasLoadedMoreChildren && !this.hasAllVisibleItems() && !this.state.isInfiniteLoading;\n    if (isMissingVisibleRows) {\n      this.onInfiniteLoad();\n    }\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.utils.subscribeToScrollListener();\n\n    if (!this.hasAllVisibleItems()) {\n      this.onInfiniteLoad();\n    }\n\n    if (this.props.displayBottomUpwards) {\n      var lowestScrollTop = this.getLowestPossibleScrollTop();\n      if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n        this.utils.setScrollTop(lowestScrollTop);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.utils.unsubscribeFromScrollListener();\n  },\n\n  infiniteHandleScroll: function infiniteHandleScroll(e) {\n    if (this.utils.scrollShouldBeIgnored(e)) {\n      return;\n    }\n    this.computedProps.handleScroll(this.scrollable);\n    this.handleScroll(this.utils.getScrollTop());\n  },\n\n  manageScrollTimeouts: function manageScrollTimeouts() {\n    // Maintains a series of timeouts to set this.state.isScrolling\n    // to be true when the element is scrolling.\n\n    if (this.state.scrollTimeout) {\n      clearTimeout(this.state.scrollTimeout);\n    }\n\n    var that = this,\n        scrollTimeout = setTimeout(function () {\n      that.setState({\n        isScrolling: false,\n        scrollTimeout: undefined\n      });\n    }, this.computedProps.timeScrollStateLastsForAfterUserScrolls);\n\n    this.setState({\n      isScrolling: true,\n      scrollTimeout: scrollTimeout\n    });\n  },\n\n  getLowestPossibleScrollTop: function getLowestPossibleScrollTop() {\n    return this.state.infiniteComputer.getTotalScrollableHeight() - this.computedProps.containerHeight;\n  },\n\n  hasAllVisibleItems: function hasAllVisibleItems() {\n    return !(_isFinite(this.computedProps.infiniteLoadBeginEdgeOffset) && this.state.infiniteComputer.getTotalScrollableHeight() < this.computedProps.containerHeight);\n  },\n\n  passedEdgeForInfiniteScroll: function passedEdgeForInfiniteScroll(scrollTop) {\n    if (this.computedProps.displayBottomUpwards) {\n      return !this.shouldAttachToBottom && scrollTop < this.computedProps.infiniteLoadBeginEdgeOffset;\n    } else {\n      return scrollTop > this.state.infiniteComputer.getTotalScrollableHeight() - this.computedProps.containerHeight - this.computedProps.infiniteLoadBeginEdgeOffset;\n    }\n  },\n\n  onInfiniteLoad: function onInfiniteLoad() {\n    this.setState({ isInfiniteLoading: true });\n    this.computedProps.onInfiniteLoad();\n  },\n\n  handleScroll: function handleScroll(scrollTop) {\n    this.shouldAttachToBottom = this.computedProps.displayBottomUpwards && scrollTop >= this.getLowestPossibleScrollTop();\n\n    this.manageScrollTimeouts();\n\n    var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(this.state, scrollTop);\n\n    if (this.passedEdgeForInfiniteScroll(scrollTop) && !this.state.isInfiniteLoading) {\n      this.setState(Object.assign({}, newApertureState));\n      this.onInfiniteLoad();\n    } else {\n      this.setState(newApertureState);\n    }\n  },\n\n  buildHeightStyle: function buildHeightStyle(height) {\n    return {\n      width: '100%',\n      height: Math.ceil(height)\n    };\n  },\n\n  render: function render() {\n    var _this2 = this;\n\n    var displayables;\n    if (this.state.numberOfChildren > 1) {\n      displayables = this.computedProps.children.slice(this.state.displayIndexStart, this.state.displayIndexEnd + 1);\n    } else {\n      displayables = this.computedProps.children;\n    }\n\n    var infiniteScrollStyles = {};\n    if (this.state.isScrolling) {\n      infiniteScrollStyles.pointerEvents = 'none';\n    }\n\n    var topSpacerHeight = this.state.infiniteComputer.getTopSpacerHeight(this.state.displayIndexStart),\n        bottomSpacerHeight = this.state.infiniteComputer.getBottomSpacerHeight(this.state.displayIndexEnd);\n\n    // This asymmetry is due to a reluctance to use CSS to control\n    // the bottom alignment\n    if (this.computedProps.displayBottomUpwards) {\n      var heightDifference = this.computedProps.containerHeight - this.state.infiniteComputer.getTotalScrollableHeight();\n      if (heightDifference > 0) {\n        topSpacerHeight = heightDifference - this.loadingSpinnerHeight;\n      }\n    }\n\n    var loadingSpinner = this.computedProps.infiniteLoadBeginEdgeOffset === undefined ? null : React.createElement(\n      'div',\n      { ref: function (c) {\n          _this2.loadingSpinner = c;\n        } },\n      this.state.isInfiniteLoading ? this.computedProps.loadingSpinnerDelegate : null\n    );\n\n    // topSpacer and bottomSpacer take up the amount of space that the\n    // rendered elements would have taken up otherwise\n    return React.createElement(\n      'div',\n      { className: this.computedProps.className,\n        ref: function (c) {\n          _this2.scrollable = c;\n        },\n        style: this.utils.buildScrollableStyle(),\n        onScroll: this.utils.nodeScrollListener },\n      React.createElement(\n        'div',\n        { ref: function (c) {\n            _this2.smoothScrollingWrapper = c;\n          }, style: infiniteScrollStyles },\n        React.createElement('div', { ref: function (c) {\n            _this2.topSpacer = c;\n          },\n          style: this.buildHeightStyle(topSpacerHeight) }),\n        this.computedProps.displayBottomUpwards && loadingSpinner,\n        displayables,\n        !this.computedProps.displayBottomUpwards && loadingSpinner,\n        React.createElement('div', { ref: function (c) {\n            _this2.bottomSpacer = c;\n          },\n          style: this.buildHeightStyle(bottomSpacerHeight) })\n      )\n    );\n  }\n});\n\nmodule.exports = Infinite;\nglobal.Infinite = Infinite;"]},"metadata":{},"sourceType":"script"}